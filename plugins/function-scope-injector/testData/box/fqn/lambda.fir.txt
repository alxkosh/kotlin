FILE: main.kt
    public final val l: R|() -> kotlin/String| = @R|org/jetbrains/kotlin/fir/plugin/fsi/InjectByFqn|(name = String(p), fqn = String(a.s)) fun <anonymous>(): R|kotlin/String| <inline=Unknown>  {
        ^ R|a/s|
    }

        public get(): R|() -> kotlin/String|
    public final fun foo(f: R|() -> kotlin/String| = @R|org/jetbrains/kotlin/fir/plugin/fsi/InjectByFqn|(name = String(p), fqn = String(a.s)) fun <anonymous>(): R|kotlin/String| <inline=Unknown>  {
        ^ R|a/s|
    }
    ): R|kotlin/String| {
        ^foo R|<local>/f|.R|SubstitutionOverride<kotlin/Function0.invoke: R|kotlin/String|>|()
    }
    public final fun box(): R|kotlin/String| {
        when () {
            !=(R|/l|.R|SubstitutionOverride<kotlin/Function0.invoke: R|kotlin/String|>|(), String(str)) ->  {
                ^box String(Error)
            }
        }

        when () {
            !=(R|/foo|(), String(str)) ->  {
                ^box String(Error)
            }
        }

        ^box String(OK)
    }
FILE: a.kt
    package a

    public final val s: R|kotlin/String| = String(str)
        public get(): R|kotlin/String|
